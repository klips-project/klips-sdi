version: '3'

services:
  nginx:
    container_name: ${CN_PREFIX}-nginx
    image: nginx
    restart: unless-stopped
    ports:
      - "127.0.0.1:81:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./mocked-webspace:/usr/share/nginx/html:ro
      - ./cog_data:/opt/cog:ro

  klips-api:
    container_name: ${CN_PREFIX}-api
    image: ghcr.io/klips-project/klips-api:latest
    restart: unless-stopped
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - PORT=3000
      - DISPATCHERQUEUE=dispatcher
      - CONFIG_DIR=/klips-conf
      - USE_RABBIT_MQ=1
      - PARTNER_URL_START
      - PARTNER_API_USERNAME
      - PARTNER_API_PASSWORD
      - PINO_STREAM_LOG_LEVEL
    volumes:
      - ./configs:/klips-conf
      - ./logs:/home/logs:Z

  rabbitmq:
    container_name: ${CN_PREFIX}-rabbitmq
    image: rabbitmq:3.10-management
    restart: unless-stopped
    # hostname required for mounted data
    hostname: ${RABBITMQ_HOSTNAME}
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq:Z
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

  dispatcher:
    container_name: ${CN_PREFIX}-dispatcher
    image: ghcr.io/klips-project/mqm-worker/dispatcher:latest
    restart: unless-stopped
    depends_on:
      - rabbitmq
    volumes:
      - ./logs:/home/logs:Z
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=dispatcher
      - PINO_STREAM_LOG_LEVEL

  error-handler:
    container_name: ${CN_PREFIX}-error-handler
    image: ghcr.io/klips-project/mqm-worker/error-handler:latest
    restart: unless-stopped
    depends_on:
      - rabbitmq
    volumes:
      - ./logs:/home/logs:Z
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=dispatcher
      - WORKERQUEUE=DeadLetterQueue
      - DEV_MODE=${ERROR_HANDLER_DEV_MODE}
      - PINO_STREAM_LOG_LEVEL

  rollback-handler:
    container_name: ${CN_PREFIX}-rollback-handler
    image: ghcr.io/klips-project/mqm-worker/rollback-handler:latest
    restart: unless-stopped
    volumes:
      - ./staging:/opt/staging:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=rollback-handler
      - GEOSERVER_REST_URL=http://${GEOSERVER_HOSTNAME}:8080/geoserver/rest/
      - GEOSERVER_USER=${GEOSERVER_USER}
      - GEOSERVER_PASSWORD=${GEOSERVER_PASSWORD}
      - PINO_STREAM_LOG_LEVEL

  send-mattermost-message:
    container_name: ${CN_PREFIX}-send-mattermost-message
    image: ghcr.io/klips-project/mqm-worker/send-mattermost-message:latest
    restart: unless-stopped
    depends_on:
      - rabbitmq
    volumes:
      - ./logs:/home/logs:Z
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=send-mattermost-message
      - MATTERMOST_HOOK_URL=${MATTERMOST_HOOK_URL}
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - PINO_STREAM_LOG_LEVEL

  send-email:
    container_name: ${CN_PREFIX}-send-email
    image: ghcr.io/klips-project/mqm-worker/send-email:latest
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - WORKERQUEUE=send-email
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - MAILHOST=${MAILHOST}
      - MAILPORT=${MAILPORT}
      - SECURE=${MAILSECURE}
      - AUTHUSER=${MAILAUTHUSER}
      - AUTHPASS=${MAILAUTHPASS}
      - FROMSENDERNAME=${MAILFROMSENDERNAME}
      - FROMSENDEREMAIL=${MAILFROMSENDEREMAIL}
      - PINO_STREAM_LOG_LEVEL
    volumes:
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    restart: unless-stopped

  geoserver-publish-imagemosaic:
    container_name: ${CN_PREFIX}-geoserver-publish-imagemosaic
    image: ghcr.io/klips-project/mqm-worker/geoserver-publish-imagemosaic:latest
    restart: unless-stopped
    volumes:
      - ./logs:/home/logs:Z
      - ./staging:/opt/staging:Z
    depends_on:
      - rabbitmq
      - geoserver
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=geoserver-publish-imagemosaic
      - GEOSERVER_REST_URL=http://${GEOSERVER_HOSTNAME}:8080/geoserver/rest/
      - GEOSERVER_USER=${GEOSERVER_USER}
      - GEOSERVER_PASSWORD=${GEOSERVER_PASSWORD}
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - PINO_STREAM_LOG_LEVEL

  geoserver-create-imagemosaic-datastore:
    container_name: ${CN_PREFIX}-geoserver-create-imagemosaic-datastore
    image: ghcr.io/klips-project/mqm-worker/geoserver-create-imagemosaic-datastore:latest
    restart: unless-stopped
    volumes:
      - ./staging:/opt/staging:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
      - geoserver
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=geoserver-create-imagemosaic-datastore
      - GEOSERVER_REST_URL=http://${GEOSERVER_HOSTNAME}:8080/geoserver/rest/
      - GEOSERVER_USER=${GEOSERVER_USER}
      - GEOSERVER_PASSWORD=${GEOSERVER_PASSWORD}
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PINO_STREAM_LOG_LEVEL

  download-file:
    container_name: ${CN_PREFIX}-download-file
    image: ghcr.io/klips-project/mqm-worker/download-file:latest
    restart: unless-stopped
    volumes:
      - ./staging:/opt/staging:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=download-file
      - PINO_STREAM_LOG_LEVEL

  geotiff-optimizer:
    container_name: ${CN_PREFIX}-geotiff-optimizer
    image: ghcr.io/klips-project/mqm-worker/geotiff-optimizer:latest
    restart: unless-stopped
    volumes:
      - ./cog_data:/opt/cog:Z
      - ./staging:/opt/staging:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=geotiff-optimizer
      - PINO_STREAM_LOG_LEVEL

  geotiff-validator:
    container_name: ${CN_PREFIX}-geotiff-validator
    image: ghcr.io/klips-project/mqm-worker/geotiff-validator:latest
    restart: unless-stopped
    volumes:
      - ./staging:/opt/staging:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=geotiff-validator
      - PINO_STREAM_LOG_LEVEL

  dataset-rotation:
    container_name: ${CN_PREFIX}-dataset-rotation
    image: ghcr.io/klips-project/mqm-worker/dataset-rotation:latest
    restart: unless-stopped
    volumes:
      - ./staging:/opt/staging:Z
      - ./cog_data:/opt/cog:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=dataset-rotation 
      - GEOSERVER_REST_URL=http://${GEOSERVER_HOSTNAME}:8080/geoserver/rest/
      - GEOSERVER_USER=${GEOSERVER_USER}
      - GEOSERVER_PASSWORD=${GEOSERVER_PASSWORD}
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - PINO_STREAM_LOG_LEVEL

  dataset-archive:
    container_name: ${CN_PREFIX}-dataset-archive
    image: ghcr.io/klips-project/mqm-worker/dataset-archive:latest
    restart: unless-stopped
    volumes:
      - ./staging:/opt/staging:Z
      - ./cog_data:/opt/cog:Z
      - ./logs:/home/logs:Z
    depends_on:
      - rabbitmq
    environment:
      - RABBITHOST=${RABBITMQ_HOSTNAME}
      - RABBITUSER=${RABBITMQ_DEFAULT_USER}
      - RABBITPASS=${RABBITMQ_DEFAULT_PASS}
      - RESULTSQUEUE=${RABBITMQ_RESULTSQUEUE}
      - WORKERQUEUE=dataset-archive
      - PINO_STREAM_LOG_LEVEL

  geoserver:
    container_name: ${CN_PREFIX}-geoserver
    image: ghcr.io/klips-project/geoserver:latest
    restart: unless-stopped
    hostname: ${GEOSERVER_HOSTNAME}
    volumes:
      - ./geoserver_data:/opt/geoserver_data/:Z
    environment:
      - INSTALL_EXTENSIONS=true
      - STABLE_EXTENSIONS=importer
      - EXTRA_JAVA_OPTS=-Xms1g -Xmx2g
      - SKIP_DEMO_DATA=true
      - GEOSERVER_CSRF_DISABLED=true

  geoserver-init:
    container_name: ${CN_PREFIX}-geoserver-init
    image: ghcr.io/klips-project/geoserver-init:latest
    depends_on:
      - geoserver
    volumes:
      - ./logs:/home/logs:Z
    environment:
      - GEOSERVER_REST_URL=http://${GEOSERVER_HOSTNAME}:8080/geoserver/rest/
      - GEOSERVER_DEFAULT_USER=${GEOSERVER_DEFAULT_USER}
      - GEOSERVER_DEFAULT_PASSWORD=${GEOSERVER_DEFAULT_PASSWORD}
      - GEOSERVER_USER=${GEOSERVER_USER}
      - GEOSERVER_PASSWORD=${GEOSERVER_PASSWORD}
      - PINO_STREAM_LOG_LEVEL
    command:
      [
        "./wait-for.sh",
        "--timeout=180",
        "${GEOSERVER_HOSTNAME}:8080",
        "--",
        "npm",
        "start"
      ]

  postgres:
    container_name: ${CN_PREFIX}-postgres
    image: postgis/postgis:13-3.2
    restart: unless-stopped
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  pygeoapi:
    container_name: ${CN_PREFIX}-pygeoapi
    image: ghcr.io/klips-project/pygeoapi:latest
    restart: unless-stopped
    environment:
      - PYTHONPATH=/usr/lib/grass83/etc/python/
      - GISBASE=/usr/lib/grass83/
      - PYGEOAPI_BASEURL=${PYGEOAPI_BASEURL}
      - SERVER_URL=${SERVER_URL}

  demonstrator:
    container_name: ${CN_PREFIX}-demonstrator
    image: nginx
    restart: unless-stopped
    volumes:
      - ./demonstrator/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./demonstrator/ogc-api-processes:/usr/share/nginx/html/ogc-api-demo:ro

  klips-chart-api:
    container_name: ${CN_PREFIX}-chart-api
    image: ghcr.io/klips-project/klips-chart-api:latest
    restart: unless-stopped
    environment:
     - VITE_SERVER_URL=${SERVER_URL}

  klips-timelapse-video-api:
    container_name: ${CN_PREFIX}-timelapse-video-api
    image: ghcr.io/klips-project/klips-timelapse-video-api:latest
    restart: unless-stopped
    environment:
     - VITE_SERVER_URL=${SERVER_URL}

  klips-warning-api:
    container_name: ${CN_PREFIX}-warning-api
    image: ghcr.io/klips-project/klips-warning-api:latest
    restart: unless-stopped

  klips-url-generator:
    container_name: ${CN_PREFIX}-url-generator
    image: ghcr.io/klips-project/klips-url-generator:latest
    restart: unless-stopped
    volumes:
      - ./easy-to-use-api/klips-warning-api/default.conf:/etc/nginx/conf.d/default.conf:ro
